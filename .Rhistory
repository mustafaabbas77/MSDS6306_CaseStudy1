getwd()
#Cleaning the data, deleting unnecessary rows and columns
#Clean_GDP<-GDP[-c(1:4,195,220,222),-c(3,6)]
names(Clean_GDP)<-c("CountryCode","Rank","Country","USD")
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
str(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
#download and read the data
GDP <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ' ,skip = 3 ,nrows=236,na.strings=c("","NA"))
econ <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv',na.strings=c("","NA"))
#Cleaning the data, deleting unnecessary rows and columns
Clean_GDP<-GDP[-c(1:4,195,220,222),-c(3,6)]
names(Clean_GDP)<-c("CountryCode","Rank","Country","USD")
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
str(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
head(row.has.na)
#Cleaning the data, deleting unnecessary rows and columns
Clean_GDP<-GDP[-c(1:4,195,220,222),-c(3,6)]
names(Clean_GDP)<-c("CountryCode","Rank","Country","USD")
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
str(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
NA_Count <- length(row.has.na)
NA_Count
row.has.na
head(Clean_GDP)
Clean_GDP
#download and read the data
GDP <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ' ,skip = 3 ,nrows=236,na.strings=c("","NA"))
econ <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv',na.strings=c("","NA"))
View(GDP)
names(gdp) <- c('countrycode','ranking','x','economy','dollars')
#Subsetting columns of our interest
Clean_GDP <- subset(gdp.raw,select = c('countrycode','ranking','economy','dollars'))
names(GDP) <- c('countrycode','ranking','x','economy','dollars')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('countrycode','ranking','economy','dollars'))
#Cleaning the data, deleting unnecessary rows and columns
#Clean_GDP<-GDP[-c(1:4,195,220,222),-c(3,6)]
#names(Clean_GDP)<-c("CountryCode","Rank","Country","USD")
names(GDP) <- c('countrycode','ranking','x','economy','dollars')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('countrycode','ranking','economy','dollars'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
#Cleaning the data, deleting unnecessary rows and columns
#Clean_GDP<-GDP[-c(1:4,195,220,222),-c(3,6)]
#names(Clean_GDP)<-c("CountryCode","Rank","Country","USD")
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
NA_Count
unmatched.column <- sum(is.na(Clean_GDP$CountryCode))
unmatched.column
str(unmatched.column)
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(Clean_GDP$Rank)
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP, file = "Clean_GDP.csv")
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(as.character((Clean_GDP$Rank)))
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP, file = "Clean_GDP.csv")
unmatched.column <- sum(is.na(Clean_GDP$CountryCode))
matched.column <- sum(!is.na(Clean_GDP$CountryCode))
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(as.character((Clean_GDP$Rank)))
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP, file = "Clean_GDP.csv")
#download and read the data
GDP <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ' ,skip = 3 ,nrows=236,na.strings=c("","NA"))
econ <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv',na.strings=c("","NA"))
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP_NA <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP_NA, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP_NA[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(as.character((Clean_GDP$Rank)))
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP_NA, file = "Clean_GDP.csv")
write.csv(Clean_GDP, file = "Clean_GDP.csv")
unmatched.column <- sum(is.na(Clean_GDP$CountryCode))
matched.column <- sum(!is.na(Clean_GDP$CountryCode))
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP_NA <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP_NA, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP_NA[!row.has.na,]
#Count the number of missing values
NA_Count <- length(row.has.na)
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(as.character((Clean_GDP$Rank)))
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP_NA, file = "Clean_GDP_NA.csv")
write.csv(Clean_GDP, file = "Clean_GDP.csv")
unmatched.column <- sum(is.na(Clean_GDP$CountryCode))
matched.column <- sum(!is.na(Clean_GDP$CountryCode))
unmatched.column <- sum(is.na(Clean_GDP_NA$CountryCode))
#Cleaning the data, deleting unnecessary rows and columns
names(GDP) <- c('CountryCode','Rank','x','Country','USD')
#Subsetting columns of our interest
Clean_GDP_NA <- subset(GDP,select = c('CountryCode','Rank','Country','USD'))
#Creating a function to check for NA is rows
row.has.na <- apply(Clean_GDP_NA, 1, function(x){any(is.na(x))})
#Removing the rows that are NULL and getitng a clean set of data
Clean_GDP <- Clean_GDP_NA[!row.has.na,]
#Count the number of missing values
NA_Count <- sum(is.na(Clean_GDP_NA$CountryCode))
#making Rank and GDP numeric
Clean_GDP$Rank<-as.numeric(as.character((Clean_GDP$Rank)))
Clean_GDP$USD<-as.numeric(gsub(",","",Clean_GDP$USD))
write.csv(Clean_GDP_NA, file = "Clean_GDP_NA.csv")
write.csv(Clean_GDP, file = "Clean_GDP.csv")
#sorting
Comb_data<-Comb_data[order(Comb_data$Rank,decreasing=TRUE),]
#Q2
Comb_data[13,3]
write.csv(Comb_data, file= "test.csv")
#Merging the two datasets
Comb_data<-merge(Clean_GDP,econ,by="CountryCode")
#Making Rank and USD numeric
Comb_data$Rank<-as.numeric(as.character(Comb_data$Rank))
Comb_data$USD<-as.numeric(gsub(",","",Comb_data$USD))
#Q1
summary(Clean_GDP)
summary(Comb_data)
#189 of 190 IDs match
#sorting
Comb_data<-Comb_data[order(Comb_data$Rank,decreasing=TRUE),]
#Q2
Comb_data[13,3]
write.csv(Comb_data, file= "test.csv")
#sorting
Comb_data<-Comb_data[order(Comb_data$USD,decreasing=FALSE),]
#Q2
Comb_data[13,3]
write.csv(Comb_data, file= "test.csv")
#sorting
Comb_data<-Comb_data[order(Comb_data$USD,decreasing=FALSE),]
#Q2
Comb_data[13,3]
write.csv(Comb_data, file= "test.csv")
read.csv(BASEBALL.csv)
getwd
getwd()
setwd("C:/Users/ThomasWang/Desktop/Experimental Statistics I/Unit8/")
read.csv(BASEBALL.csv)
getwd()
read.csv("BASEBALL.csv")
Baseball <- read.csv("Baseball.csv")
plot(Baseball)
?plot
plot(Baseball$Payroll,Baseball)
plot(Baseball$Payroll,Baseball$Wins)
cor(Baseball$Payroll, Baseball$Wins)
Baseball2 <- Baseball[-c(29),]
Baseball2
cor(Baseball2$Payroll, Baseball2$Wins)
